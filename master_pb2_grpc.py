# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import master_pb2 as master__pb2


class MasterStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Join = channel.unary_unary(
                '/Master/Join',
                request_serializer=master__pb2.JoinRequest.SerializeToString,
                response_deserializer=master__pb2.JoinReply.FromString,
                )
        self.Leave = channel.unary_unary(
                '/Master/Leave',
                request_serializer=master__pb2.LeaveRequest.SerializeToString,
                response_deserializer=master__pb2.LeaveReply.FromString,
                )
        self.PushState = channel.unary_unary(
                '/Master/PushState',
                request_serializer=master__pb2.StateRequest.SerializeToString,
                response_deserializer=master__pb2.SateReply.FromString,
                )
        self.RouteGuide = channel.unary_unary(
                '/Master/RouteGuide',
                request_serializer=master__pb2.RouteRequest.SerializeToString,
                response_deserializer=master__pb2.RouteReply.FromString,
                )
        self.SubmitResult = channel.unary_unary(
                '/Master/SubmitResult',
                request_serializer=master__pb2.ResultInfo.SerializeToString,
                response_deserializer=master__pb2.ResultInfo.FromString,
                )


class MasterServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Join(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Leave(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PushState(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RouteGuide(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SubmitResult(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MasterServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Join': grpc.unary_unary_rpc_method_handler(
                    servicer.Join,
                    request_deserializer=master__pb2.JoinRequest.FromString,
                    response_serializer=master__pb2.JoinReply.SerializeToString,
            ),
            'Leave': grpc.unary_unary_rpc_method_handler(
                    servicer.Leave,
                    request_deserializer=master__pb2.LeaveRequest.FromString,
                    response_serializer=master__pb2.LeaveReply.SerializeToString,
            ),
            'PushState': grpc.unary_unary_rpc_method_handler(
                    servicer.PushState,
                    request_deserializer=master__pb2.StateRequest.FromString,
                    response_serializer=master__pb2.SateReply.SerializeToString,
            ),
            'RouteGuide': grpc.unary_unary_rpc_method_handler(
                    servicer.RouteGuide,
                    request_deserializer=master__pb2.RouteRequest.FromString,
                    response_serializer=master__pb2.RouteReply.SerializeToString,
            ),
            'SubmitResult': grpc.unary_unary_rpc_method_handler(
                    servicer.SubmitResult,
                    request_deserializer=master__pb2.ResultInfo.FromString,
                    response_serializer=master__pb2.ResultInfo.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Master', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Master(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Join(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Master/Join',
            master__pb2.JoinRequest.SerializeToString,
            master__pb2.JoinReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Leave(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Master/Leave',
            master__pb2.LeaveRequest.SerializeToString,
            master__pb2.LeaveReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PushState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Master/PushState',
            master__pb2.StateRequest.SerializeToString,
            master__pb2.SateReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RouteGuide(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Master/RouteGuide',
            master__pb2.RouteRequest.SerializeToString,
            master__pb2.RouteReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SubmitResult(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Master/SubmitResult',
            master__pb2.ResultInfo.SerializeToString,
            master__pb2.ResultInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
